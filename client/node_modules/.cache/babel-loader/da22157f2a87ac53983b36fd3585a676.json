{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cwell\\\\Documents\\\\Programming\\\\Babysitting\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { InputMoment, BigInputMoment, DatePicker, TimePicker } from 'react-input-moment';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\"\n    };\n    this.state = {\n      startTime: 0,\n      endTime: 0,\n      bedTime: moment().hour(22).minute(0).second(0),\n      totalPay: 0,\n      preBedTimePay: 0,\n      postBedTimePay: 0,\n      postMidnightHours: 0,\n      hoursWorked: 0\n    };\n    this.calculatePay = this.calculatePay.bind(this);\n    this.updateStartTime = this.updateStartTime.bind(this);\n    this.updateEndTime = this.updateEndTime.bind(this);\n    this.updatePay = this.updatePay.bind(this);\n  }\n\n  updateStartTime(event) {\n    this.setState({\n      startTime: event.target.value\n    });\n  }\n\n  updateEndTime(event) {\n    this.setState({\n      endTime: event.target.value\n    });\n  }\n\n  updatePay() {\n    console.log(this.state.startTime);\n    console.log(this.state.endTime);\n  }\n\n  calculatePay() {\n    let startTime;\n\n    if (this.state.startTime.split(\":\")[0] < 17 && this.state.startTime.split(\":\")[0] > 0) {\n      startTime = moment().add(1, 'days').hour(this.state.startTime.split(\":\")[0]).minute(0).second(0);\n    } else {\n      startTime = moment().hour(this.state.startTime.split(\":\")[0]).minute(0).second(0);\n    }\n\n    if (startTime < moment().hour(17).minute(0).second(0) && startTime > moment().add(1, 'days').hour(4).minute(0).second(0)) {\n      alert('start time must not be before 5pm');\n      return;\n    }\n\n    let endTime;\n\n    if (this.state.endTime.split(\":\")[0] < 17) {\n      endTime = moment().add(1, 'days').hour(this.state.endTime.split(\":\")[0]).minute(this.state.endTime.split(\":\")[1]).second(0);\n    } else {\n      endTime = moment().hour(this.state.endTime.split(\":\")[0]).minute(this.state.endTime.split(\":\")[1]).second(0);\n    }\n\n    if (endTime < moment().hour(17).minute(1).second(0) || endTime > moment().add(1, 'days').hour(4).minutes(0).second(0)) {\n      alert('End time cannot be later than 4am');\n      return;\n    }\n\n    if (endTime.minutes() > 0) {\n      endTime = endTime.add(1, 'hour').subtract(endTime.minutes(), 'minutes');\n    }\n\n    let bedTime = this.state.bedTime;\n    let hoursWorked = endTime.diff(startTime, 'hours');\n    let midnightTime = moment().add(1, 'days').hour(0).minute(0).second(0);\n    let totalPay = 0;\n    let preBedTimePay = 0;\n    let postBedTimePay = 0;\n    let postMidnightPay = 0;\n\n    if (endTime > bedTime) {\n      let hoursOfWork;\n\n      if (startTime == moment().hour(17).minute(0).second(0)) {\n        hoursOfWork = 5;\n      } else {\n        hoursOfWork = bedTime.diff(startTime, 'hours');\n\n        if (hoursOfWork < 0) {\n          hoursOfWork = 0;\n        }\n      }\n\n      preBedTimePay = hoursOfWork * 12;\n      totalPay += preBedTimePay;\n      console.log({\n        totalPay,\n        preBedTimePay,\n        hoursOfWork,\n        bedTime,\n        startTime,\n        diff: bedTime.diff(startTime, 'hours')\n      });\n\n      if (endTime > midnightTime) {\n        let preMidnightHours;\n\n        if (startTime > bedTime) {\n          preMidnightHours = midnightTime.diff(startTime, 'hours');\n        } else {\n          preMidnightHours = 2;\n        }\n\n        postBedTimePay = preMidnightHours * 8;\n        totalPay += postBedTimePay;\n        console.log({\n          totalPay,\n          postBedTimePay,\n          preMidnightHours,\n          bedTime\n        });\n        let postMidnightHours = endTime.diff(midnightTime, 'hours');\n        postMidnightPay = postMidnightHours * 16;\n        totalPay += postMidnightPay;\n        console.log({\n          totalPay,\n          postMidnightPay,\n          postMidnightHours\n        });\n      } else {\n        let preMidnightHours = endTime.diff(bedTime, 'hours');\n        postBedTimePay = preMidnightHours * 8;\n        totalPay += postBedTimePay;\n        console.log({\n          totalPay,\n          postBedTimePay,\n          preMidnightHours\n        });\n      }\n    } else {\n      let hoursOfWork = endTime.diff(startTime, 'hours');\n      preBedTimePay = hoursOfWork * 12;\n      totalPay += preBedTimePay;\n      console.log({\n        totalPay,\n        preBedTimePay,\n        hoursOfWork\n      });\n      alert(totalPay);\n      this.setState({\n        hoursWorked: hoursWorked\n      });\n      this.setState({\n        preBedTimePay: preBedTimePay\n      });\n      this.setState({\n        totalPay: totalPay\n      }); // return {\n      //     hoursWorked: hoursOfWork,\n      //     preBedTimePay: preBedTimePay, \n      //     postBedTimePay: 0,\n      //     postMidnightPay: 0,\n      //     totalPay: totalPay\n      // }\n    }\n\n    this.setState({\n      hoursWorked: hoursWorked\n    });\n    this.setState({\n      preBedTimePay: preBedTimePay\n    });\n    this.setState({\n      postBedTimePay: postBedTimePay\n    });\n    this.setState({\n      postMidnightPay: postMidnightPay\n    });\n    this.setState({\n      totalPay: totalPay\n    }); // return {\n    //     hoursWorked: hoursWorked,\n    //     preBedTimePay: preBedTimePay, \n    //     postBedTimePay: postBedTimePay,\n    //     postMidnightPay: postMidnightPay,\n    //     totalPay: totalPay\n    // }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000\").then(res => res.json()).then(data => this.setState({\n      name: data.name\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"payWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"startTime\",\n          children: \"Choose a time for your meeting:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"timeWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"startTimeWrapper\",\n            class: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              \"data-testid\": \"startTime\",\n              id: \"startTime\",\n              name: \"startTime\",\n              min: \"0:00\",\n              max: \"23:59\",\n              onChange: this.updateStartTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"endTimeWrapper\",\n            class: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              id: \"endTime\",\n              \"data-testid\": \"endTime\",\n              name: \"endTime\",\n              min: \"0:00\",\n              max: \"23:59\",\n              onChange: this.updateEndTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"button\",\n          onClick: this.calculatePay,\n          children: \"Calculate Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"start time cannot be before 5pm and end time cannot be later than 4am\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"totalPay\",\n          children: [\"Total Pay: $ \", this.state.totalPay, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","InputMoment","BigInputMoment","DatePicker","TimePicker","moment","App","Component","constructor","props","state","name","startTime","endTime","bedTime","hour","minute","second","totalPay","preBedTimePay","postBedTimePay","postMidnightHours","hoursWorked","calculatePay","bind","updateStartTime","updateEndTime","updatePay","event","setState","target","value","console","log","split","add","alert","minutes","subtract","diff","midnightTime","postMidnightPay","hoursOfWork","preMidnightHours","componentDidMount","fetch","then","res","json","data","render"],"sources":["C:/Users/cwell/Documents/Programming/Babysitting/client/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport {InputMoment, BigInputMoment, DatePicker, TimePicker} from 'react-input-moment';\r\nimport moment from 'moment'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    name: \"\"\r\n  }\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startTime: 0,\r\n      endTime: 0,\r\n      bedTime: moment().hour(22).minute(0).second(0),\r\n      totalPay: 0,\r\n      preBedTimePay: 0,\r\n      postBedTimePay: 0,\r\n      postMidnightHours: 0,\r\n      hoursWorked: 0,\r\n    };\r\n    this.calculatePay = this.calculatePay.bind(this);\r\n    this.updateStartTime = this.updateStartTime.bind(this)\r\n    this.updateEndTime = this.updateEndTime.bind(this)\r\n    this.updatePay = this.updatePay.bind(this);\r\n  }\r\n\r\n  updateStartTime(event) {\r\n    this.setState({startTime: event.target.value})\r\n  }\r\n\r\n  updateEndTime(event) {\r\n    this.setState({endTime: event.target.value})\r\n\r\n  }\r\n\r\n  updatePay() {\r\n    console.log(this.state.startTime)\r\n    console.log(this.state.endTime)\r\n  \r\n  }\r\n\r\n  calculatePay() {\r\n      let startTime;\r\n\r\n\r\n      if(this.state.startTime.split(\":\")[0] < 17 && this.state.startTime.split(\":\")[0] > 0) {\r\n        startTime = moment().add(1, 'days').hour(this.state.startTime.split(\":\")[0]).minute(0).second(0)\r\n      }\r\n      else {\r\n        startTime = moment().hour(this.state.startTime.split(\":\")[0]).minute(0).second(0)\r\n      }\r\n\r\n      \r\n\r\n      if (startTime < moment().hour(17).minute(0).second(0) && startTime > moment().add(1, 'days').hour(4).minute(0).second(0)) {\r\n        alert('start time must not be before 5pm')\r\n        return\r\n      }\r\n\r\n      let endTime;\r\n\r\n\r\n\r\n      if(this.state.endTime.split(\":\")[0] < 17) {\r\n        endTime = moment().add(1, 'days').hour(this.state.endTime.split(\":\")[0]).minute(this.state.endTime.split(\":\")[1]).second(0)\r\n      }\r\n      else {\r\n        endTime = moment().hour(this.state.endTime.split(\":\")[0]).minute(this.state.endTime.split(\":\")[1]).second(0)\r\n      }\r\n\r\n      if (endTime < moment().hour(17).minute(1).second(0) || endTime > moment().add(1, 'days').hour(4).minutes(0).second(0)) {\r\n        alert('End time cannot be later than 4am')\r\n        return\r\n      }\r\n\r\n      if (endTime.minutes() > 0) {\r\n        endTime = endTime.add(1, 'hour').subtract(endTime.minutes(), 'minutes')\r\n      }\r\n\r\n      let bedTime = this.state.bedTime\r\n      let hoursWorked = endTime.diff(startTime, 'hours')\r\n      let midnightTime = moment().add(1, 'days').hour(0).minute(0).second(0)\r\n      let totalPay = 0\r\n      let preBedTimePay = 0\r\n      let postBedTimePay = 0\r\n      let postMidnightPay = 0\r\n  \r\n      if (endTime > bedTime) {\r\n          let hoursOfWork;\r\n          if (startTime == moment().hour(17).minute(0).second(0)) {\r\n            hoursOfWork = 5\r\n          }\r\n          else {\r\n            hoursOfWork = bedTime.diff(startTime, 'hours')\r\n            if (hoursOfWork < 0) {\r\n              hoursOfWork = 0\r\n            }\r\n          }\r\n          preBedTimePay = hoursOfWork * 12\r\n          totalPay += preBedTimePay\r\n          console.log({totalPay, preBedTimePay, hoursOfWork, bedTime, startTime, diff: bedTime.diff(startTime, 'hours')})\r\n  \r\n          if (endTime > midnightTime ) {\r\n            let preMidnightHours\r\n              if (startTime > bedTime) {\r\n                preMidnightHours = midnightTime.diff(startTime, 'hours')\r\n              } else {\r\n              preMidnightHours = 2\r\n\r\n              }\r\n              postBedTimePay = (preMidnightHours) * 8\r\n              totalPay += postBedTimePay\r\n              console.log({totalPay, postBedTimePay, preMidnightHours, bedTime})\r\n  \r\n              let postMidnightHours = endTime.diff(midnightTime, 'hours')\r\n              postMidnightPay = postMidnightHours * 16\r\n              totalPay += postMidnightPay\r\n              console.log({totalPay, postMidnightPay, postMidnightHours})\r\n  \r\n  \r\n          } else {\r\n              let preMidnightHours = endTime.diff(bedTime, 'hours')\r\n              postBedTimePay = preMidnightHours * 8\r\n              totalPay += postBedTimePay\r\n              console.log({totalPay, postBedTimePay, preMidnightHours})\r\n              \r\n          }\r\n  \r\n  \r\n      } else {\r\n          let hoursOfWork = endTime.diff(startTime, 'hours')\r\n          preBedTimePay = hoursOfWork * 12\r\n          totalPay += preBedTimePay\r\n          console.log({totalPay, preBedTimePay, hoursOfWork})\r\n          alert(totalPay);\r\n\r\n          this.setState({hoursWorked: hoursWorked})\r\n          this.setState({preBedTimePay: preBedTimePay})\r\n          this.setState({totalPay: totalPay})\r\n          // return {\r\n          //     hoursWorked: hoursOfWork,\r\n          //     preBedTimePay: preBedTimePay, \r\n          //     postBedTimePay: 0,\r\n          //     postMidnightPay: 0,\r\n          //     totalPay: totalPay\r\n          // }\r\n      }\r\n        \r\n      this.setState({hoursWorked: hoursWorked})\r\n      this.setState({preBedTimePay: preBedTimePay})\r\n      this.setState({postBedTimePay: postBedTimePay})\r\n      this.setState({postMidnightPay: postMidnightPay})\r\n      this.setState({totalPay: totalPay})\r\n      // return {\r\n      //     hoursWorked: hoursWorked,\r\n      //     preBedTimePay: preBedTimePay, \r\n      //     postBedTimePay: postBedTimePay,\r\n      //     postMidnightPay: postMidnightPay,\r\n      //     totalPay: totalPay\r\n      // }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000\")\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ name: data.name }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n      <div id = 'payWrapper'>\r\n      <label for=\"startTime\">Choose a time for your meeting:</label>\r\n\r\n      <div id='timeWrapper'>\r\n\r\n        <div id='startTimeWrapper' class='inputWrapper'>\r\n          <h2>Start Time</h2>\r\n          <input type=\"time\" data-testid=\"startTime\" id=\"startTime\" name=\"startTime\" min=\"0:00\" max=\"23:59\" onChange={this.updateStartTime}></input>\r\n        </div>\r\n\r\n        <div id='endTimeWrapper' class='inputWrapper'>\r\n          <h2>End Time</h2>\r\n          <input type=\"time\" id=\"endTime\" data-testid='endTime' name=\"endTime\" min=\"0:00\" max=\"23:59\" onChange={this.updateEndTime}></input>\r\n        </div>\r\n      </div>\r\n\r\n      <button data-testid='button' onClick={this.calculatePay}>\r\n      Calculate Pay\r\n      </button>\r\n\r\n      \r\n      <small>start time cannot be before 5pm and end time cannot be later than 4am</small>\r\n\r\n      <h1 data-testid='totalPay'>Total Pay: $ {this.state.totalPay}!</h1>\r\n\r\n      </div>\r\n      </body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}