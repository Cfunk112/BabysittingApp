{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cwell\\\\Documents\\\\Programming\\\\Babysitting\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { InputMoment, BigInputMoment, DatePicker, TimePicker } from 'react-input-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\"\n    };\n    this.sayHello = this.sayHello.bind(this);\n  }\n\n  sayHello() {\n    function calculatePay(startTime, endTime, bedTime) {\n      let hoursWorked = endTime.diff(startTime, 'hours');\n      let midnightTime = moment().add(1, 'days').hour(0).minute(0).second(0);\n      let totalPay = 0;\n      let preBedTimePay = 0;\n      let postBedTimePay = 0;\n      let postMidnightPay = 0;\n\n      if (endTime > bedTime) {\n        let hoursOfWork = bedTime.diff(startTime, 'hours');\n        preBedTimePay = hoursOfWork * 12;\n        totalPay += preBedTimePay;\n        console.log({\n          totalPay,\n          preBedTimePay,\n          hoursOfWork\n        });\n\n        if (endTime > midnightTime) {\n          let preMidnightHours = midnightTime.diff(bedTime, 'hours');\n          postBedTimePay = preMidnightHours * 8;\n          totalPay += postBedTimePay;\n          console.log({\n            totalPay,\n            postBedTimePay,\n            preMidnightHours\n          });\n          let postMidnightHours = endTime.diff(midnightTime, 'hours');\n          postMidnightPay = postMidnightHours * 16;\n          totalPay += postMidnightPay;\n          console.log({\n            totalPay,\n            postMidnightPay,\n            postMidnightHours\n          });\n        } else {\n          let preMidnightHours = endTime.diff(bedTime, 'hours');\n          postBedTimePay = preMidnightHours * 8;\n          totalPay += postBedTimePay;\n          console.log({\n            totalPay,\n            postBedTimePay,\n            preMidnightHours\n          });\n        }\n      } else {\n        let hoursOfWork = endTime.diff(startTime, 'hours');\n        preBedTimePay = hoursOfWork * 12;\n        totalPay += preBedTimePay;\n        console.log({\n          totalPay,\n          preBedTimePay,\n          hoursOfWork\n        });\n        return {\n          hoursWorked: hoursOfWork,\n          preBedTimePay: preBedTimePay,\n          postBedTimePay: 0,\n          postMidnightPay: 0,\n          totalPay: totalPay\n        };\n      }\n\n      return {\n        hoursWorked: hoursWorked,\n        preBedTimePay: preBedTimePay,\n        postBedTimePay: postBedTimePay,\n        postMidnightPay: postMidnightPay,\n        totalPay: totalPay\n      };\n    }\n\n    alert('Hello!');\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000\").then(res => res.json()).then(data => this.setState({\n      name: data.name\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.state.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"appt\",\n        children: \"Choose a time for your meeting:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        id: \"startTime\",\n        name: \"startTime\",\n        min: \"0:00\",\n        max: \"23:59\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        id: \"endTime\",\n        name: \"endTime\",\n        min: \"0:00\",\n        max: \"23:59\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sayHello,\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"start time cannot be before 5pm and end time cannot be later than 4am\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","InputMoment","BigInputMoment","DatePicker","TimePicker","App","Component","constructor","props","state","name","sayHello","bind","calculatePay","startTime","endTime","bedTime","hoursWorked","diff","midnightTime","moment","add","hour","minute","second","totalPay","preBedTimePay","postBedTimePay","postMidnightPay","hoursOfWork","console","log","preMidnightHours","postMidnightHours","alert","componentDidMount","fetch","then","res","json","data","setState","render"],"sources":["C:/Users/cwell/Documents/Programming/Babysitting/client/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport {InputMoment, BigInputMoment, DatePicker, TimePicker} from 'react-input-moment';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    name: \"\"\r\n  }\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.sayHello = this.sayHello.bind(this);\r\n  }\r\n\r\n  sayHello() {\r\n    function calculatePay(startTime,endTime, bedTime) {\r\n    let hoursWorked = endTime.diff(startTime, 'hours')\r\n    let midnightTime = moment().add(1, 'days').hour(0).minute(0).second(0)\r\n    let totalPay = 0\r\n    let preBedTimePay = 0\r\n    let postBedTimePay = 0\r\n    let postMidnightPay = 0\r\n\r\n    if (endTime > bedTime) {\r\n        let hoursOfWork = bedTime.diff(startTime, 'hours')\r\n        preBedTimePay = hoursOfWork * 12\r\n        totalPay += preBedTimePay\r\n        console.log({totalPay, preBedTimePay, hoursOfWork})\r\n\r\n        if (endTime > midnightTime ) {\r\n            let preMidnightHours = midnightTime.diff(bedTime, 'hours')\r\n            postBedTimePay = preMidnightHours * 8\r\n            totalPay += postBedTimePay\r\n            console.log({totalPay, postBedTimePay, preMidnightHours})\r\n\r\n            let postMidnightHours = endTime.diff(midnightTime, 'hours')\r\n            postMidnightPay = postMidnightHours * 16\r\n            totalPay += postMidnightPay\r\n            console.log({totalPay, postMidnightPay, postMidnightHours})\r\n\r\n\r\n        } else {\r\n            let preMidnightHours = endTime.diff(bedTime, 'hours')\r\n            postBedTimePay = preMidnightHours * 8\r\n            totalPay += postBedTimePay\r\n            console.log({totalPay, postBedTimePay, preMidnightHours})\r\n            \r\n        }\r\n\r\n\r\n    } else {\r\n        let hoursOfWork = endTime.diff(startTime, 'hours')\r\n        preBedTimePay = hoursOfWork * 12\r\n        totalPay += preBedTimePay\r\n        console.log({totalPay, preBedTimePay, hoursOfWork})\r\n        return {\r\n            hoursWorked: hoursOfWork,\r\n            preBedTimePay: preBedTimePay, \r\n            postBedTimePay: 0,\r\n            postMidnightPay: 0,\r\n            totalPay: totalPay\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        hoursWorked: hoursWorked,\r\n        preBedTimePay: preBedTimePay, \r\n        postBedTimePay: postBedTimePay,\r\n        postMidnightPay: postMidnightPay,\r\n        totalPay: totalPay\r\n    }\r\n}\r\n    alert('Hello!');\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000\")\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ name: data.name }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n      <h1>Hello {this.state.name}!</h1>\r\n      <label for=\"appt\">Choose a time for your meeting:</label>\r\n\r\n      <input type=\"time\" id=\"startTime\" name=\"startTime\" min=\"0:00\" max=\"23:59\" required></input>\r\n      <input type=\"time\" id=\"endTime\" name=\"endTime\" min=\"0:00\" max=\"23:59\" required></input>\r\n\r\n      <button onClick={this.sayHello}>\r\n      Click me!\r\n      </button>\r\n\r\n      \r\n      <small>start time cannot be before 5pm and end time cannot be later than 4am</small>\r\n\r\n      </body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}